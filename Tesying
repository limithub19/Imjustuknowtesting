local player = game.Players.LocalPlayer
local char = player.Character or player.CharacterAdded:Wait()

-- Try to find pet storage in ReplicatedStorage
local possiblePaths = {
	game.ReplicatedStorage:FindFirstChild("Pets"),
	game.ReplicatedStorage:FindFirstChild("Entities"),
	game.ReplicatedStorage:FindFirstChild("PetModels"),
}

local petFolder = nil
for _, path in ipairs(possiblePaths) do
	if path and #path:GetChildren() > 0 then
		petFolder = path
		break
	end
end

if not petFolder then
	warn("‚ùå No pet folder found in ReplicatedStorage.")
	return
end

-- GUI
local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
gui.Name = "RealPetSpawner"
gui.ResetOnSpawn = false

local frame = Instance.new("Frame", gui)
frame.Size = UDim2.new(0, 320, 0, 300)
frame.Position = UDim2.new(0.5, -160, 0.5, -150)
frame.BackgroundColor3 = Color3.fromRGB(32, 32, 32)
frame.Active = true
frame.Draggable = true

local title = Instance.new("TextLabel", frame)
title.Size = UDim2.new(1, 0, 0, 30)
title.BackgroundTransparency = 1
title.Text = "üì¶ All Pets (Real Models)"
title.TextColor3 = Color3.new(1, 1, 1)
title.Font = Enum.Font.GothamBold
title.TextScaled = true

local scrolling = Instance.new("ScrollingFrame", frame)
scrolling.Size = UDim2.new(1, -10, 1, -40)
scrolling.Position = UDim2.new(0, 5, 0, 35)
scrolling.CanvasSize = UDim2.new(0, 0, 0, 0)
scrolling.ScrollBarThickness = 6
scrolling.BackgroundTransparency = 0.1
scrolling.BackgroundColor3 = Color3.fromRGB(40, 40, 40)

local layout = Instance.new("UIListLayout", scrolling)
layout.SortOrder = Enum.SortOrder.LayoutOrder

-- Pet button maker
local function makeButton(pet)
	local btn = Instance.new("TextButton")
	btn.Size = UDim2.new(1, -8, 0, 40)
	btn.Text = "üêæ " .. pet.Name
	btn.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
	btn.TextColor3 = Color3.new(1, 1, 1)
	btn.Font = Enum.Font.Gotham
	btn.TextScaled = true

	btn.MouseButton1Click:Connect(function()
		local clone = pet:Clone()
		clone.Parent = workspace

		local root = char:FindFirstChild("HumanoidRootPart")
		if root then
			clone:PivotTo(root.CFrame * CFrame.new(3, 0, 3))
		end

		-- Freeze in place, no collision
		for _, part in ipairs(clone:GetDescendants()) do
			if part:IsA("BasePart") then
				part.Anchored = true
				part.CanCollide = false
			end
		end
	end)

	btn.Parent = scrolling
end

-- Load pet buttons
for _, pet in ipairs(petFolder:GetChildren()) do
	if pet:IsA("Model") then
		makeButton(pet)
	end
end

task.wait(0.1)
scrolling.CanvasSize = UDim2.new(0, 0, 0, layout.AbsoluteContentSize.Y)
